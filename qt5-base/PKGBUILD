pkgname=('qt5-base')
pkgdesc='A cross-platform application and UI framework'
pkgver=5.7.0
pkgrel=1
arch=('i686' 'x86_64')
url='http://www.qt.io/developers'
license=('GPL3' 'LGPL' 'FDL' 'custom')
depends=('libjpeg-turbo' 'xcb-util-keysyms' 'libgl' 'dbus' 'fontconfig' 'systemd'
       'xcb-util-wm' 'libxrender' 'libxi' 'sqlite' 'xcb-util-image' 'icu'
       'qtchooser' 'libinput' 'libsm' 'libxkbcommon-x11')
makedepends=('libxcb' 'xcb-proto' 'xcb-util' 'xcb-util-image' 'xcb-util-wm' 'xcb-util-keysyms'
            'mesa' 'at-spi2-core' 'alsa-lib' 'gst-plugins-base-libs' 'libjpeg-turbo' 'cups'
            'libpulse' 'hicolor-icon-theme' 'desktop-file-utils' 'postgresql-libs' 'nss'
            'libmariadbclient' 'sqlite' 'unixodbc' 'libfbclient' 'libmng' 'python2' 'ruby'
            'gperf' 'libxslt' 'libxcomposite' 'fontconfig' 'bluez-libs' 'openal' 'gtk2'
            'libxkbcommon-x11' 'mtdev' 'harfbuzz' 'libwebp' 'leveldb' 'geoclue' 'pciutils'
            'libinput' 'yasm' 'git')
optdepends=('qt5-svg: to use SVG icon themes'
          'postgresql-libs: PostgreSQL driver'
          'libmariadbclient: MariaDB driver'
          'unixodbc: ODBC driver'
          'libfbclient: Firebird/iBase driver'
          'mtdev: evdev plugin'
          'gtk2: GTK2 plugin')
conflicts=('qt')
groups=('qt' 'qt5', 'modified')
_pkgfqn="qt-everywhere-opensource-src-${pkgver}"
source=("http://download.qt-project.org/official_releases/qt/${pkgver%.*}/${pkgver}/single/${_pkgfqn}.tar.xz")
md5sums=('SKIP')

prepare() {
  cd ${_pkgfqn}

  # Build qmake using Arch {C,LD}FLAGS
  # This also sets default {C,CXX,LD}FLAGS for projects built using qmake
  sed -i -e "s|^\(QMAKE_CFLAGS_RELEASE.*\)|\1 ${CFLAGS}|" \
    qtbase/mkspecs/common/gcc-base.conf
  sed -i -e "s|^\(QMAKE_LFLAGS_RELEASE.*\)|\1 ${LDFLAGS}|" \
    qtbase/mkspecs/common/g++-unix.conf

  # Use python2 for Python 2.x
  find . -name '*.py' -exec sed -i \
    's|#![ ]*/usr/bin/python$|&2|;s|#![ ]*/usr/bin/env python$|&2|' {} +
  # in qtwebengine there are still a lot of relative calls which need a workaround
  mkdir "${srcdir}"/python2-path
  ln -s /usr/bin/python2 "${srcdir}"/python2-path/python

  # Try to enable proprietary_codecs and use some system yasm
  sed -e 's/contains(WEBENGINE_CONFIG, proprietary_codecs): //' \
      -e '/use_system_ffmpeg=0"/a GYP_ARGS += "-Duse_system_yasm=1"' \
      -i qtwebengine/src/core/gyp_run.pro

  sed -i 's/libsystemd-journal/libsystemd/g' \
    qtbase/src/corelib/global/global.pri \
    qtbase/config.tests/unix/journald/journald.pro

  cd qtbase
  shopt -s nullglob
  for p in ${srcdir}/../patches/*.patch; do
    patch -p1 < $p
  done
}

build() {
  cd ${_pkgfqn}

  export QTDIR="${srcdir}"/${_pkgfqn}
  export LD_LIBRARY_PATH="${QTDIR}"/qtbase/lib:"${QTDIR}"/qttools/lib:"${LD_LIBRARY_PATH}"
  export QT_PLUGIN_PATH="${QTDIR}"/qtbase/plugins

  # python2 workaround
  export PATH="${srcdir}/python2-path:$PATH"

  # FS#38796
  [[ "${CARCH}" = "i686" ]] && SSE2="-no-sse2"

  PYTHON=/usr/bin/python2 ./configure -confirm-license -opensource \
    -prefix /usr \
    -bindir /usr/lib/qt/bin \
    -docdir /usr/share/doc/qt \
    -headerdir /usr/include/qt \
    -archdatadir /usr/lib/qt \
    -datadir /usr/share/qt \
    -sysconfdir /etc/xdg \
    -examplesdir /usr/share/doc/qt/examples \
    -plugin-sql-{psql,mysql,sqlite,odbc,ibase} \
    -system-sqlite \
    -openssl-linked \
    -nomake examples \
    -no-rpath \
    -optimized-qmake \
    -dbus-linked \
    -system-harfbuzz \
    -journald \
    -libinput ${SSE2}

  make module-qtbase
}

package() {
  cd ${_pkgfqn}/qtbase
  make INSTALL_ROOT="${pkgdir}" install

  install -D -m644 LGPL_EXCEPTION.txt \
    "${pkgdir}"/usr/share/licenses/${pkgname}/LGPL_EXCEPTION.txt

  # Drop QMAKE_PRL_BUILD_DIR because reference the build dir
  find "${pkgdir}/usr/lib" -type f -name '*.prl' \
    -exec sed -i -e '/^QMAKE_PRL_BUILD_DIR/d' {} \;

  # Fix wrong qmake path in pri file
  sed -i "s|${srcdir}/${_pkgfqn}/qtbase|/usr|" \
    "${pkgdir}"/usr/lib/qt/mkspecs/modules/qt_lib_bootstrap_private.pri

  # Useful symlinks
  install -d "${pkgdir}"/usr/bin
  for b in "${pkgdir}"/usr/lib/qt/bin/*; do
    ln -s /usr/lib/qt/bin/$(basename $b) "${pkgdir}"/usr/bin/$(basename $b)-qt5
  done
}
